Index: src/ImportPage.vala
===================================================================
--- src/ImportPage.vala	(revision 1951)
+++ src/ImportPage.vala	(revision 1952)
@@ -620,8 +620,8 @@
         mount.unmounted.connect(on_unmounted);
         
         debug("Unmounting camera ...");
-        mount.unmount_with_operation(MountUnmountFlags.NONE, new Gtk.MountOperation(AppWindow.get_instance()),
-            null, on_unmount_finished);
+        mount.unmount_with_operation.begin(MountUnmountFlags.NONE, 
+            new Gtk.MountOperation(AppWindow.get_instance()), null, on_unmount_finished);
         
         return true;
     }
@@ -631,7 +631,7 @@
         
         Mount mount = (Mount) source;
         try {
-            mount.unmount_with_operation_finish(aresult);
+            mount.unmount_with_operation.end(aresult);
         } catch (Error err) {
             AppWindow.error_message(UNMOUNT_FAILED_MSG);
             
Index: src/util.vala
===================================================================
--- src/util.vala	(revision 1951)
+++ src/util.vala	(revision 1952)
@@ -635,7 +635,7 @@
     return ((AppInfo) a).get_name().down().collate(((AppInfo) b).get_name().down());
 }
 
-public SortedList<AppInfo> get_apps_for_mime_types(string[] mime_types) {        
+public SortedList<AppInfo> get_apps_for_mime_types(string[] mime_types) {
         SortedList<AppInfo> external_apps = new SortedList<AppInfo>(app_info_comparator);
         
         if (mime_types.length == 0)
@@ -644,10 +644,10 @@
         // 3 loops because SortedList.contains() wasn't paying nicely with AppInfo,
         // probably because it has a special equality function
         foreach (string mime_type in mime_types) {
-            unowned string content_type = g_content_type_from_mime_type(mime_type);
-			if (content_type == null)
-				break;
-			
+            string content_type = g_content_type_from_mime_type(mime_type);
+            if (content_type == null)
+                break;
+            
             foreach (AppInfo external_app in 
                 AppInfo.get_all_for_type(content_type)) {
                 bool already_contains = false;
@@ -709,4 +709,4 @@
 #else
     return "/";
 #endif
-}
\ No newline at end of file
+}
