From 945cbf9e5104f09cd7c1473035c282998d34e78e Mon Sep 17 00:00:00 2001
From: Mark Probst <mark.probst@gmail.com>
Date: Fri, 6 Apr 2012 10:50:32 +0200
Subject: [PATCH] Fixes for libpng 1.5.

---
 rwpng.c | 73 ++++++++++++++++++++++++++++++++---------------------------------
 1 file changed, 36 insertions(+), 37 deletions(-)

diff --git a/rwimg/rwpng.c b/rwimg/rwpng.c
index 840d13f..a550172 100644
--- a/rwimg/rwpng.c
+++ b/rwimg/rwpng.c
@@ -43,6 +43,7 @@
 open_png_file_reading (const char *filename, int *width, int *height)
 {
     png_data_t *data = (png_data_t*)malloc(sizeof(png_data_t));
+    int bit_depth, color_type;
 
     assert(data != 0);
 
@@ -58,34 +59,36 @@
     data->end_info = png_create_info_struct(data->png_ptr);
     assert(data->end_info != 0);
 
-    if (setjmp(data->png_ptr->jmpbuf))
+    if (setjmp (png_jmpbuf (data->png_ptr)))
 	assert(0);
 
     png_init_io(data->png_ptr, data->file);
 
     png_read_info(data->png_ptr, data->info_ptr);
 
-    *width = data->info_ptr->width;
-    *height = data->info_ptr->height;
+    *width = png_get_image_width (data->png_ptr, data->info_ptr);
+    *height = png_get_image_height (data->png_ptr, data->info_ptr);
 
-    if (data->info_ptr->bit_depth != 8 && data->info_ptr->bit_depth != 16)
+    bit_depth = png_get_bit_depth (data->png_ptr, data->info_ptr);
+    if (bit_depth != 8 && bit_depth != 16)
     {
 	fprintf(stderr, "PNG files are only supported with bit depths 8 and 16.\n");
 	/* FIXME: free stuff */
 	return 0;
     }
 
-    if (data->info_ptr->color_type != PNG_COLOR_TYPE_RGB
-	&& data->info_ptr->color_type != PNG_COLOR_TYPE_RGB_ALPHA
-	&& data->info_ptr->color_type != PNG_COLOR_TYPE_GRAY
-	&& data->info_ptr->color_type != PNG_COLOR_TYPE_GRAY_ALPHA)
+    color_type = png_get_color_type (data->png_ptr, data->info_ptr);
+    if (color_type != PNG_COLOR_TYPE_RGB
+	&& color_type != PNG_COLOR_TYPE_RGB_ALPHA
+	&& color_type != PNG_COLOR_TYPE_GRAY
+	&& color_type != PNG_COLOR_TYPE_GRAY_ALPHA)
     {
 	fprintf(stderr, "PNG files are only supported in RGB and Gray, with or without alpha.\n");
 	/* FIXME: free stuff */
 	return 0;
     }
 
-    if (data->info_ptr->interlace_type != PNG_INTERLACE_NONE)
+    if (png_get_interlace_type (data->png_ptr, data->info_ptr) != PNG_INTERLACE_NONE)
     {
 	fprintf(stderr, "Interlaced PNG files are not supported.\n");
 	/* FIXME: free stuff */
@@ -104,25 +107,28 @@
     int i;
     int bps, spp;
     unsigned char *row;
+    int color_type, width;
 
-    if (setjmp(data->png_ptr->jmpbuf))
+    if (setjmp (png_jmpbuf (data->png_ptr)))
 	assert(0);
 
-    if (data->info_ptr->color_type == PNG_COLOR_TYPE_GRAY)
+    color_type = png_get_color_type (data->png_ptr, data->info_ptr);
+    if (color_type == PNG_COLOR_TYPE_GRAY)
 	spp = 1;
-    else if (data->info_ptr->color_type == PNG_COLOR_TYPE_GRAY_ALPHA)
+    else if (color_type == PNG_COLOR_TYPE_GRAY_ALPHA)
 	spp = 2;
-    else if (data->info_ptr->color_type == PNG_COLOR_TYPE_RGB)
+    else if (color_type == PNG_COLOR_TYPE_RGB)
 	spp = 3;
     else
 	spp = 4;
 
-    if (data->info_ptr->bit_depth == 16)
+    if (png_get_bit_depth (data->png_ptr, data->info_ptr) == 16)
 	bps = 2;
     else
 	bps = 1;
 
-    row = (unsigned char*)malloc(data->info_ptr->width * spp * bps);
+    width = png_get_image_width (data->png_ptr, data->info_ptr);
+    row = (unsigned char*)malloc (width * spp * bps);
 
     for (i = 0; i < num_lines; ++i)
     {
@@ -131,13 +137,13 @@
 	png_read_row(data->png_ptr, (png_bytep)row, 0);
 
 	if (spp <= 2)
-	    for (j = 0; j < data->info_ptr->width; ++j)
+	    for (j = 0; j < width; ++j)
 		for (channel = 0; channel < 3; ++channel)
-		    lines[i * data->info_ptr->width * 3 + j * 3 + channel] = row[j * spp * bps];
+		    lines[i * width * 3 + j * 3 + channel] = row[j * spp * bps];
 	else
-	    for (j = 0; j < data->info_ptr->width; ++j)
+	    for (j = 0; j < width; ++j)
 		for (channel = 0; channel < 3; ++channel)
-		    lines[i * data->info_ptr->width * 3 + j * 3 + channel]
+		    lines[i * width * 3 + j * 3 + channel]
 			= row[j * spp * bps + channel * bps];
     }
 
@@ -151,7 +157,7 @@
 {
     png_data_t *data = (png_data_t*)_data;
 
-    if (setjmp(data->png_ptr->jmpbuf))
+    if (setjmp (png_jmpbuf (data->png_ptr)))
 	assert(0);
 
     if (data->have_read)
@@ -180,7 +186,7 @@
     data->info_ptr = png_create_info_struct(data->png_ptr);
     assert(data->info_ptr != 0);
 
-    if (setjmp(data->png_ptr->jmpbuf))
+    if (setjmp (png_jmpbuf (data->png_ptr)))
 	assert(0);
 
     if (pixel_stride == 4)
@@ -188,18 +194,9 @@
 
     png_init_io(data->png_ptr, data->file);
 
-    data->info_ptr->width = width;
-    data->info_ptr->height = height;
-    data->info_ptr->valid = 0;
-    data->info_ptr->rowbytes = width * 3;
-    data->info_ptr->palette = 0;
-    data->info_ptr->num_palette = 0;
-    data->info_ptr->num_trans = 0;
-    data->info_ptr->bit_depth = 8;
-    data->info_ptr->color_type = PNG_COLOR_TYPE_RGB;
-    data->info_ptr->compression_type = PNG_COMPRESSION_TYPE_DEFAULT;
-    data->info_ptr->filter_type = PNG_FILTER_TYPE_DEFAULT;
-    data->info_ptr->interlace_type = PNG_INTERLACE_NONE;
+    png_set_IHDR (data->png_ptr, data->info_ptr,
+		  width, height, 8, PNG_COLOR_TYPE_RGB,
+		  PNG_INTERLACE_NONE, PNG_COMPRESSION_TYPE_DEFAULT, PNG_FILTER_TYPE_DEFAULT);
 
     png_write_info(data->png_ptr, data->info_ptr);
 
@@ -215,13 +212,15 @@
     png_data_t *data = (png_data_t*)_data;
     unsigned char *packed_line;
     int i;
+    int width;
 
-    if (setjmp(data->png_ptr->jmpbuf))
+    if (setjmp (png_jmpbuf (data->png_ptr)))
 	assert(0);
 
+    width = png_get_image_width (data->png_ptr, data->info_ptr);
     if (data->pixel_stride != 3)
     {
-	packed_line = (unsigned char*)malloc(data->info_ptr->width * 3);
+	packed_line = (unsigned char*)malloc(width * 3);
 	assert(packed_line != 0);
     }
     else
@@ -235,7 +234,7 @@
 	{
 	    int j;
 
-	    for (j = 0; j < data->info_ptr->width; ++j)
+	    for (j = 0; j < width; ++j)
 	    {
 		packed_line[j * 3 + 0] = p[j * data->pixel_stride + 0];
 		packed_line[j * 3 + 1] = p[j * data->pixel_stride + 1];
@@ -257,7 +256,7 @@
 {
     png_data_t *data = (png_data_t*)_data;
 
-    if (setjmp(data->png_ptr->jmpbuf))
+    if (setjmp (png_jmpbuf (data->png_ptr)))
 	assert(0);
 
     png_write_end(data->png_ptr, data->info_ptr);
-- 
1.8.1.6

