diff --git a/repoze/who/plugins/digestauth/__init__.py b/repoze/who/plugins/digestauth/__init__.py
index 849361c..6e3414e 100644
--- a/repoze/who/plugins/digestauth/__init__.py
+++ b/repoze/who/plugins/digestauth/__init__.py
@@ -18,7 +18,7 @@ __ver_tuple__ = (__ver_major__, __ver_minor__, __ver_patch__, __ver_sub__)
 __version__ = "%d.%d.%d%s" % __ver_tuple__
 
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from repoze.who.interfaces import IIdentifier, IChallenger, IAuthenticator
 from repoze.who.utils import resolveDotted
@@ -33,6 +33,7 @@ from repoze.who.plugins.digestauth.utils import (extract_digest_credentials,
 _ENVKEY_STALE_NONCE = "repoze.who.plugins.digestauth.stale_nonce"
 
 
+@implementer(IIdentifier, IChallenger, IAuthenticator)
 class DigestAuthPlugin(object):
     """A repoze.who plugin for authentication via HTTP-Digest-Auth.
 
@@ -76,8 +77,6 @@ class DigestAuthPlugin(object):
     suitable for most purposes.
     """
 
-    implements(IIdentifier, IChallenger, IAuthenticator)
-
     def __init__(self, realm, nonce_manager=None, domain=None, qop=None,
                  get_password=None, get_pwdhash=None):
         if nonce_manager is None:
@@ -244,7 +243,7 @@ class DigestAuthPlugin(object):
         # Escape any special characters in those values, so we can send
         # them as quoted-strings.  The extra values added below are under
         # our control so we know they don't contain quotes.
-        for key, value in params.iteritems():
+        for key, value in iter(params.items()):
             params[key] = value.replace('"', '\\"')
         # Mark the nonce as stale if told so by the environment.
         # NOTE:  The RFC says the server "should only set stale to TRUE if
@@ -255,7 +254,7 @@ class DigestAuthPlugin(object):
             params["stale"] = "TRUE"
         params["algorithm"] = "MD5"
         # Construct the final header as quoted-string k/v pairs.
-        value = ", ".join('%s="%s"' % itm for itm in params.iteritems())
+        value = ", ".join('%s="%s"' % itm for itm in iter(params.items()))
         value = "Digest " + value
         return [("WWW-Authenticate", value)]
 
diff --git a/repoze/who/plugins/digestauth/noncemanager.py b/repoze/who/plugins/digestauth/noncemanager.py
index b819532..9bb44f8 100644
--- a/repoze/who/plugins/digestauth/noncemanager.py
+++ b/repoze/who/plugins/digestauth/noncemanager.py
@@ -13,6 +13,7 @@ import hmac
 import base64
 import heapq
 import threading
+import binascii
 from hashlib import md5
 
 from repoze.who.plugins.digestauth.utils import strings_differ
@@ -150,7 +151,7 @@ class SignedNonceManager(object):
             timestamp = timestamp[:-1]
         # Add some random bytes to avoid repeating nonces when several are
         # generated very close together.
-        data = "%s:%s" % (timestamp, os.urandom(3).encode("hex"))
+        data = "%s:%s" % (timestamp, binascii.hexlify(os.urandom(3)))
         # Append the signature.
         sig = self._get_signature(data, environ)
         return "%s:%s" % (data, sig)
@@ -243,8 +244,8 @@ class SignedNonceManager(object):
         """
         # We're using md5 for the digest; using something stronger
         # for the HMAC probably won't win us much.
-        sig = hmac.new(self.secret, value, md5)
+        sig = hmac.new(self.secret, value.encode("ascii"), md5)
         for header in self.sign_headers:
-            sig.update("\x00")
-            sig.update(environ.get(header, ""))
+            sig.update(b"\x00")
+            sig.update(environ.get(header, "").encode("ascii"))
         return base64.b64encode(sig.digest())
diff --git a/repoze/who/plugins/digestauth/tests.py b/repoze/who/plugins/digestauth/tests.py
index bb5714f..c02340d 100644
--- a/repoze/who/plugins/digestauth/tests.py
+++ b/repoze/who/plugins/digestauth/tests.py
@@ -82,7 +82,7 @@ def build_response(environ, params, username, password, **kwds):
         params.setdefault("nc", "0000001")
     resp = calculate_digest_response(params, password=password)
     params["response"] = resp
-    authz = ",".join('%s="%s"' % v for v in params.iteritems())
+    authz = ",".join('%s="%s"' % v for v in iter(params.items()))
     environ["HTTP_AUTHORIZATION"] = "Digest " + authz
     return params
 
@@ -218,7 +218,7 @@ class TestDigestAuthPlugin(unittest.TestCase):
         self.assertEquals(resp, "6629fae49393a05397450978507c4ef1")
         # Check that we can auth using it.
         params["response"] = resp
-        authz = ",".join('%s="%s"' % v for v in params.iteritems())
+        authz = ",".join('%s="%s"' % v for v in iter(params.items()))
         environ = make_environ(REQUEST_METHOD="GET",
                                PATH_INFO="/dir/index.html",
                                HTTP_AUTHORIZATION="Digest " + authz)
diff --git a/repoze/who/plugins/digestauth/utils.py b/repoze/who/plugins/digestauth/utils.py
index 767b54b..dee6290 100644
--- a/repoze/who/plugins/digestauth/utils.py
+++ b/repoze/who/plugins/digestauth/utils.py
@@ -10,9 +10,12 @@ Helper functions for repoze.who.plugins.digestauth.
 import re
 import base64
 import wsgiref.util
-from urlparse import urlparse
 from hashlib import md5
 
+try:
+    from urlparse import urlparse
+except ImportError:
+    from urllib.parse import urlparse
 
 # Regular expression matching a single param in the HTTP_AUTHORIZATION header.
 # This is basically <name>=<value> where <value> can be an unquoted token,
