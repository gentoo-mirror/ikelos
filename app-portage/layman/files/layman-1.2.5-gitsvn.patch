diff --git a/etc/layman.cfg b/etc/layman.cfg
index 53c9d2c..0c7a753 100644
--- a/etc/layman.cfg
+++ b/etc/layman.cfg
@@ -74,6 +74,7 @@ nocheck  : yes
 #cvs_command        : /usr/bin/cvs
 #darcs_command      : /usr/bin/darcs
 #git_command        : /usr/bin/git
+#git-svn_command    : /usr/bin/git
 #mercurial_command  : /usr/bin/hg
 #rsync_command      : /usr/bin/rsync
 #svn_command        : /usr/bin/svn
diff --git a/layman/config.py b/layman/config.py
index b00d2ac..926abd2 100644
--- a/layman/config.py
+++ b/layman/config.py
@@ -71,6 +71,7 @@ class Config(object):
                          'cvs_command': '/usr/bin/cvs',
                          'darcs_command': '/usr/bin/darcs',
                          'git_command': '/usr/bin/git',
+                         'git-svn_command': '/usr/bin/git',
                          'mercurial_command': '/usr/bin/hg',
                          'rsync_command': '/usr/bin/rsync',
                          'svn_command': '/usr/bin/svn',
diff --git a/layman/overlay.py b/layman/overlay.py
index 643e652..9d980bc 100644
--- a/layman/overlay.py
+++ b/layman/overlay.py
@@ -34,6 +34,7 @@ import xml.etree.ElementTree as ET # Python 2.5
 from   layman.overlays.bzr       import BzrOverlay
 from   layman.overlays.darcs     import DarcsOverlay
 from   layman.overlays.git       import GitOverlay
+from   layman.overlays.gitsvn    import GitSvnOverlay
 from   layman.overlays.mercurial import MercurialOverlay
 from   layman.overlays.cvs       import CvsOverlay
 from   layman.overlays.svn       import SvnOverlay
@@ -51,6 +52,7 @@ from   layman.utils              import indent
 
 OVERLAY_TYPES = dict((e.type_key, e) for e in (
     GitOverlay,
+    GitSvnOverlay,
     CvsOverlay,
     SvnOverlay,
     RsyncOverlay,
diff --git a/layman/overlays/gitsvn.py b/layman/overlays/gitsvn.py
new file mode 100644
index 0000000..c5d91b1
--- /dev/null
+++ b/layman/overlays/gitsvn.py
@@ -0,0 +1,79 @@
+#!/usr/bin/python
+# -*- coding: utf-8 -*-
+#################################################################################
+# LAYMAN GIT OVERLAY HANDLER
+#################################################################################
+# File:       git.py
+#
+#             Handles git overlays
+#
+# Copyright:
+#             (c) 2005 - 2008 Gunnar Wrobel, Stefan Schweizer
+#             Distributed under the terms of the GNU General Public License v2
+#
+# Author(s):
+#             Gunnar Wrobel <wrobel@gentoo.org>
+#             Stefan Schweizer <genstef@gentoo.org>
+''' Git-Svn overlay support.'''
+
+__version__ = "$Id: git.py 146 2006-05-27 09:52:36Z wrobel $"
+
+#===============================================================================
+#
+# Dependencies
+#
+#-------------------------------------------------------------------------------
+
+from   layman.utils             import path
+from   layman.overlays.overlay  import Overlay
+
+#===============================================================================
+#
+# Class GitSvnOverlay
+#
+#-------------------------------------------------------------------------------
+
+class GitSvnOverlay(Overlay):
+    ''' Handles git overlays.'''
+
+    type = 'Git-Svn'
+    type_key = 'git-svn'
+
+    def __init__(self, xml, config, ignore = 0, quiet = False):
+        Overlay.__init__(self, xml, config, ignore)
+
+    def add(self, base, quiet = False):
+        '''Add overlay.'''
+
+        self.supported()
+
+        if quiet:
+            quiet_option = '-q '
+        else:
+            quiet_option = ''
+ 
+        # http:// should get trailing slash, other protocols shouldn't
+        slash = ''
+        if self.src.split(':')[0] == 'http':
+            slash = '/'
+        return self.cmd(self.command() + ' svn clone ' + quiet_option + '"' + self.src + slash
+                        + '" "' + path([base, self.name]) + '"')
+
+    def sync(self, base, quiet = False):
+        '''Sync overlay.'''
+
+        self.supported()
+
+        if quiet:
+            quiet_option = ' -q'
+        else:
+            quiet_option = ''
+ 
+        return self.cmd('cd "' + path([base, self.name]) + '" && '
+                        + self.command() + ' svn rebase' + quiet_option)
+
+    def supported(self):
+        '''Overlay type supported?'''
+
+        return Overlay.supported(self, [(self.command(), 'git',
+                                         'dev-util/git'),])
